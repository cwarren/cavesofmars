Screens:
- Caves of Mars title/splash screen
- story screen
- class selection screen
- play screen
    + maps: surface, upper caves, gateway boss cave, lower tunnels
- item selection screen
- falling animation screen

- 

Game Jam Goals:

- split messaging display into a separate screen than the main map/play area
  + implement message history system

- refactor fog of war to use a secondary map rather than the live map (i.e. avoid showing distant map changes)

- design and implement a richer melee combat system (at the least, split out hitting, damaging, other hit effects, dodging, damage resistance, and on-being-hit effects)

- integrate thrown/fired items into the combat system

- design and implement a simple loot system (or, rather, give appropriate items to appropriate NPCs, and have those items be used)

- design and implement a simple keyed-door system
  
- boss key gives you access to win state


standard starting gear:

JATT - Jack-of-All-Trades-Tool - shovel/pick/axe/staff/prybar
HEM Suit (badly damaged)- Hostile Environment Mitigation Suit
Multitool - [leatherman]
Comm Unit (broken)
HEM Pack (broken) - (heater, oxy tanks, etc.)
Headlamp
powerbars
analyzer



NOTE: a density function might be useful; consider even doing away with direct mass and instead deal with bulk and density...?


TODO NEXT:

5. for docile fungus corpses, increase food density more than bulk when the corpse is dropped

6. improve / fix help screen(s)-- show details from binding info, customized for current binding set, with info nav aspects

7. implement on-going-interuptable actions (e.g. eating, digging)
    - actor has an action mode, and if the action mode is <an ongoing action> then that action is repeated automatically. This continues until the standard end condition is met (e.g. eaten until full, or else eaten until the item is gone; dig until the stone state changes; etc.), or else until a disturbance event happens
    - disturbance events: visible mob adjacent, or else visible mob moves towards player, or else damage taken
    NOTE: action always happens at least once! (i.e. on the turn the command is issued)

8. container objects
    - containers have a weight, bulk
    - containers have a bulk capacity
    - containers have an access action duration - it can take more (for packs, pouches, etc) or less (for slings, bandoliers, etc) time to take out items so that they can be used (holded, thrown, etc.)
    - weight goes up as items are added to it, but bulk does NOT
    - items are placed in a container using the p (pack) control key (NOTE: this is a two-stage thing - first the target container must be selected)
    - items in a container are accessed using the P (unPack) control key (NOTE: this is a two-stage thing - first the target container must be selected)
    - when placing a container in another container, use bulk of container PLUS bulk of all container contents

10. add new entity: small martian
11.    which can pick up and equip items it finds (5 inven slots)
11.5      need a value metric function for things that can be found/gotten - should have option of spec-ing direct values for items, but the function shoudl also support inspection-based valuation)
12.    and which uses a more interesting / better wander mechanism (A* towards a given visible destination - choose a new destination on arrival, OR, weight random space selection against backtracking (until caught in a dead end?))
13.    and drop inventory on death

15. LOOT (loot tables (re-read blog post); drop rate; etc.)
        oozes sometimes drop loot
        give small martians some starting loot

17. figure out where geodic nuts and jelly balls come from (oozes, perhaps? introduce several kinds of ooze, and when they are adjacent they have a chance to spawn a jelly ball or a geodic nut (depending on other circumstances?))

20. crafting system!
        two basic operations - break down (consume?) (create raw materials from something), and construct (build something from raw materials and/or other things)
    base:
        - material
            + leather (generally, creature parts)
            + suit scraps
            + dried mycelium (particular fungus, particular techniques?)
        - cord
            + sinew (generally, creature parts)
            + suit scraps
        - sticks, small
            + dried mycelium (particular fungus, particular techniques?)
            + bone (generally, creature parts)
            + JAT scraps
        - sticks, large
            + bone (generally, creature parts)
            + JAT scraps
        - rocks
        - adhesive
            + fungus stuff (particular fungus, particular techniques?)
            + creature-based
        - edges
            + stone shards (from worked stone)
            + suit scraps
            + teeth (generally, creature parts)
        - hard material
            + suit scraps
            + scutes (generally, creature parts)
            + worked stone (from rocks)
            + dried mycelium (particular fungus, particular techniques?)
    created:
        - various weapons & armor
        - ammo
        - loose walls (rubble tiles)
        - tight walls (cracked stone tiles)
        - containers
        - security things (e.g. creature deterrent - prevents spawning on/around a given area, creatures tend to wander away from it
        
    

25. useable items (potions, pods, etc.)

30. cooking - requires certain equipment and conditions; reduces bulk by factor of X, weight by X/2, increases food density by at least 1/X

42.5 consider a spore-y mass repository w/ different kinds of spore-y masses that grow on different things (even consider making this prodecurally generated - can dynamically set targets, exclusions, rates, etc.)
42.75 consider docile fungi occasionally spawning nearby spore-y masses that share the same traits



70. design/implement alternate path to victory(ish) - post death, if killed at least one ooze and at least one fungus, or if killed by fungus, option to revive and play as a fungal zombie - food consumption increases dramatically, allied with fungus, no further equipping, but still can level/improve
